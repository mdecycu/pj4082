<h1>About</h1>
<p>3d 列印機電模擬系統在 uArm 機械手臂設計流程上的應用</p>
<p>The Application of 3D Printing Mechatronic Simulation System in the Design Process of uArm Robotic Arm</p>
<h4>組員:</h4>
<p style="padding-left: 30px;">40823116<br/>40823131<br/>40823152<br/>40823153</p>
<h1>研究動機</h1>
<h2>3D列印模擬</h2>
<p><a href="https://www.youtube.com/watch?v=CF8xtkBd60k">https://www.youtube.com/watch?v=CF8xtkBd60k</a></p>
<p><a href="https://github.com/neuebot/FIBR3DEmul">FIBR3DEmul</a>—an open-access simulation solution for 3D printing processes of FDM machines with 3+ actuated axes</p>
<p><a href="https://www.digitalengineering247.com/article/simulation-improves-3d-print-quality">https://www.digitalengineering247.com/article/simulation-improves-3d-print-quality</a></p>
<p><a href="https://www.hubs.com/knowledge-base/simulations-3d-printing/">https://www.hubs.com/knowledge-base/simulations-3d-printing/</a></p><h1>文獻探討</h1>
<p><a href="https://forum.coppeliarobotics.com/viewtopic.php?t=8864">https://forum.coppeliarobotics.com/viewtopic.php?t=8864</a> </p>
<p><a href="/downloads/literature/Mobile 3D Printing Robot Simulation with Viscoelastic Fluids.pdf">Mobile 3D Printing Robot Simulation with Viscoelastic Fluids.pdf</a></p>
<p><a href="/downloads/literature/DigitalTwinTransdisciplanarySystems.pdf">DigitalTwinTransdisciplanarySystems.pdf</a></p>
<p><a href="/downloads/literature/TrSwEngelSpreitzerZm2020_what_is_a_digital_twin.pdf">TrSwEngelSpreitzerZm2020_what_is_a_digital_twin.pdf</a></p>
<p><a href="/downloads/literature/conception-of-a-digital-twin-in-mechanical-engineering-a-case-study-in-technical-product-development.pdf">conception-of-a-digital-twin-in-mechanical-engineering-a-case-study-in-technical-product-development.pdf</a></p>
<p></p>
<p></p><h1>研究方法</h1>
<h2>3D 列印機電模擬</h2>
<h2>LaTeX 協同文件編輯</h2><h1>uArm 應用</h1>
<h2>零件設計</h2>
<h2>機械手臂組立</h2>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/xmlFormat.htm">Coppeliasim xml</a></p>
<h2>零件模擬列印</h2><h1>結果與討論</h1><h1>Reference</h1>
<p><a href="/downloads/2020_An Engineer’s Guide to  Industrial Robot Designs.pdf">2020_An Engineer’s Guide to Industrial Robot Designs.pdf</a> (<a href="/downloads/2020_An Engineer’s Guide to  Industrial Robot Designs_zh_cn.pdf">簡體中文</a>)</p>
<p>Repository: <a href="https://github.com/mdecourse/pj4082">https://github.com/mdecourse/pj4082</a></p>
<p>Github Pages: <a href="https://mde.tw/pj4082">https://mde.tw/pj4082</a></p>
<p>Heroku: <a href="https://pj4082.herokuapp.com">https://pj4082.herokuapp.com</a> (以倉儲容量壓縮檔案計算, 若超過 500 MB, 將無法 push 到 Heroku 進行同步)</p>
<p>Discussion: <a href="https://github.com/mdecourse/pj4082/discussions">https://github.com/mdecourse/pj4082/discussions</a></p>
<p></p>
<p>繼平面機構合成與分析套件的開發 (<a href="https://github.com/mdecourse/ps2020">https://github.com/mdecourse/ps2020</a>) 後, Project 4082 希望可以開發用於計算機程式, 網際內容管理, 電腦輔助設計實習與協同產品設計實習課程使用的:</p>
<p>機器手臂模擬套件, 也就是 Six-axis Robotic Arm Simulator.</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/wZQ0uriwApY" title="YouTube video player" width="560"></iframe></p>
<h4>Reference:</h4>
<p style="padding-left: 30px;"><a href="/downloads/1999_modeling_of_industrial_robot.pdf">1999_modeling_of_industrial_robot.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2001_Kinematic Calibration Procedure for Serial Robotswith Six Revolute Axes.pdf">2001_Kinematic Calibration Procedure for Serial Robotswith Six Revolute Axes.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2002_Forward and Inverse Kinematics Models  for a 5-dof Pioneer 2 Robot Arm .pdf">2002_Forward and Inverse Kinematics Models for a 5-dof Pioneer 2 Robot Arm .pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2007_On Modeling and Control of FlexibleManipulators.pdf">2007_On Modeling and Control of FlexibleManipulators.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2008_Design Optimization in Industrial Robotics.pdf">2008_Design Optimization in Industrial Robotics.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2010_modeling and Control of FlexibleManipulators.pdf">2010_modeling and Control of FlexibleManipulators.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2011_Vision Based 3-D Position Control for a Robot Arm.pdf">2011_Vision Based 3-D Position Control for a Robot Arm.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2011_Development of a Model-Based Control System forthe Gantry-Tau Parallel Kinematic Machine.pdf">2011_Development of a Model-Based Control System forthe Gantry-Tau Parallel Kinematic Machine.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2012_Concept design of an ultra-lightindustrial robot.pdf">2012_Concept design of an ultra-lightindustrial robot.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2014_Design, Implementation and Control of aRobotic Arm Using PIC 16F877A Microcontroller.pdf">2014_Design, Implementation and Control of aRobotic Arm Using PIC 16F877A Microcontroller.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2014_Kinematic analysis and simulation of a new-type robotwith special structure.pdf">2014_Kinematic analysis and simulation of a new-type robotwith special structure.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2015_Kinematic Calibration of Six-Axis Robots.pdf">2015_Kinematic Calibration of Six-Axis Robots.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2016_Design and Structural Analysis of a Robotic Arm.pdf">2016_Design and Structural Analysis of a Robotic Arm.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2018_Robot Racking.pdf">2018_Robot Racking.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2018_The parameter identification model consideringboth geometric parameters and joint stiffness.pfd.pdf">2018_The parameter identification model consideringboth geometric parameters and joint stiffness.pfd.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2019_Modeling techniques for kinematic analysis of a six-axis robotic arm.pdf">2019_Modeling techniques for kinematic analysis of a six-axis robotic arm.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2019_Kinematic and Dynamic Analysis of an IndustrialSix-Axis Robotic Manipulator.pdf">2019_Kinematic and Dynamic Analysis of an IndustrialSix-Axis Robotic Manipulator.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2019_Milling accuracy improvement of a 6-axis industrial robot through dynamic analysis.pdf">2019_Milling accuracy improvement of a 6-axis industrial robot through dynamic analysis.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2019_Modelling, Identification and Controlof a 5-DOF Shotcrete Robot.pdf">/downloads/2019_Modelling, Identification and Controlof a 5-DOF Shotcrete Robot.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2020_Design, simulation, and analysis of a 6-axis robot using robot visualization software.pdf">2020_Design, simulation, and analysis of a 6-axis robot using robot visualization software.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2020_Modeling and Control of6-axis Robot Arm.pdf">2020_Modeling and Control of6-axis Robot Arm.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/2020_Shape Design Optimization of a Robot Arm Using aSurrogate-Based Evolutionary Approach.pdf">2020_Shape Design Optimization of a Robot Arm Using aSurrogate-Based Evolutionary Approach.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/HbirdJ/RoboND-Kinematics-Project">https://github.com/HbirdJ/RoboND-Kinematics-Project</a> (DH calculator)</p>
<p style="padding-left: 30px;">Kuk kr16 cad files: <a href="https://grabcad.com/library/kuka-kr16-industrial-robotic-arm-1">https://grabcad.com/library/kuka-kr16-industrial-robotic-arm-1</a></p>
<p style="padding-left: 30px;">Podcast: <a href="/get_page/About/Understanding and solving industrial robot design challenges">Understanding and solving industrial robot design challenges</a></p><h2>Task1</h2>
<p>從 <a href="https://github.com/mdecourse/RobotSimulator">https://github.com/mdecourse/RobotSimulator</a> 倉儲開始研究, 配合 <a href="https://link.springer.com/book/10.1007/978-1-4842-5857-6">Beginning PyQT.pdf</a>, 以及 <a href="https://www.cs.utexas.edu/users/fussell/courses/cs354/handouts/Addison.Wesley.OpenGL.Programming.Guide.8th.Edition.Mar.2013.ISBN.0321773039.pdf">OpenGL Programming Guide.pdf</a> 電子書整理資料.</p>
<p>目標: 重新設定 OpenGL 場景的光影設定, 採用 <a href="https://www.parallemic.org/RoKiSim.html">RoKiSim</a> Industrial Robot 定義方式, 導入更多 Robots 與 Tools 進行控制模擬.</p>
<h2>CAD</h2>
<h4>Solvespace:</h4>
<p style="padding-left: 30px;">自行編譯</p>
<p style="padding-left: 30px;"><a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/OHyeZz6XE8A" title="YouTube video player" width="560"></iframe></p>
<h4>NX12:</h4>
<p style="padding-left: 30px;">可攜套件 (nx12 At mde Gdrive 下載)</p>
<h4>Onshape:</h4>
<p style="padding-left: 30px;"><a href="https://www.onshape.com/en/">https://www.onshape.com/en/</a></p>
<p style="padding-left: 30px;">利用近端或網際程式 (Heroku) 訂製所需零組件.</p>
<h4>FreeCAD:</h4>
<p style="padding-left: 30px;">可利用 Python 產生零組件的自由套件.</p>
<p style="padding-left: 30px;"><a href="https://www.freecadweb.org/">https://www.freecadweb.org/</a></p>
<p></p>
<h3>Teach</h3>
<p><a href="https://automaticaddison.com/">https://automaticaddison.com/</a></p>
<p><a href="https://automaticaddison.com/about-me/">https://automaticaddison.com/about-me/</a></p>
<p><a href="https://medium.com/@kylry/it-s-important-to-teach-problem-solving-or-teach-to-the-problem-and-not-the-tools-musk-says-ffc754f0c05a">https://medium.com/@kylry/it-s-important-to-teach-problem-solving-or-teach-to-the-problem-and-not-the-tools-musk-says-ffc754f0c05a</a></p>
<p><a href="https://elbruno.com/2015/09/14/innovation-teach-to-solve-problems-not-to-use-tools/">https://elbruno.com/2015/09/14/innovation-teach-to-solve-problems-not-to-use-tools/</a></p>
<h4>How to teach the problem but not the tools.</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Nxqt-F4YdNY" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/zIwLWfaAg-8" title="YouTube video player" width="560"></iframe></p>
<h2>Webots</h2>
<h4>Webots docs 研究:</h4>
<p style="padding-left: 30px;">Webots documentation 採用 showdown.js 將 markdown 轉為 html 的過程還利用關鍵字替代置入 html 與 javascript 以 x3d 格式操控網際 Robot 的技術, 可以用來展示相關的 Robotics 設計與控制結果ㄡ</p>
<p style="padding-left: 30px;"><a href="https://www.cyberbotics.com/doc/guide/web-streaming">https://www.cyberbotics.com/doc/guide/web-streaming</a></p>
<h4>Learning materials:</h4>
<p style="padding-left: 30px;"><a href="https://courses.ideate.cmu.edu/16-375/f2020/text/lectures/index.html">https://courses.ideate.cmu.edu/16-375/f2020/text/lectures/index.html</a></p>
<p style="padding-left: 30px;"><a href="https://courses.ideate.cmu.edu/16-375/f2019/text/index.html">https://courses.ideate.cmu.edu/16-375/f2019/text/index.html</a></p>
<p><a href="/downloads/2020_Deepbots_ A Webots-Based DeepReinforcement Learning Frameworkfor Robotics.pdf">2020_Deepbots_ A Webots-Based DeepReinforcement Learning Frameworkfor Robotics.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/aidudezzz/deepbots">https://github.com/aidudezzz/deepbots</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/aidudezzz/deepbots-tutorials">https://github.com/aidudezzz/deepbots-tutorials</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/KelvinYang0320/deepbots-RL-agent">https://github.com/KelvinYang0320/deepbots-RL-agent</a></p>
<p>在自行建立 Robot simulator 之前, 先熟悉 Webots 架構, 查驗是否可以直接利用 Webots 執行專案.</p>
<h4>Windows 64 位元 lite 可攜版本:</h4>
<p style="padding-left: 30px;"><a href="http://a.kmol.info:88/webots_lite.7z">http://a.kmol.info:88/webots_lite.7z</a></p>
<h4>Webots user guide:</h4>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/guide/index">https://cyberbotics.com/doc/guide/index</a></p>
<h4>Webots reference manual:</h4>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/reference/index">https://cyberbotics.com/doc/reference/index</a></p>
<h4>Webots for automobile:</h4>
<p style="padding-left: 30px;"><a href="https://cyberbotics.com/doc/automobile/index">https://cyberbotics.com/doc/automobile/index</a></p>
<p>執行下列 inverse_kimatics.wbt 之前必須 pip install ikpy</p>
<p>Webots\projects\robots\abb\irb\worlds\inverse_kinematics.wbt 使用 shift + 滑鼠左鍵可以移動 Object.</p>
<h4>Webots 容量</h4>
<p>R2021a 版本</p>
<p style="padding-left: 30px;">doc 目錄 587 MB</p>
<p style="padding-left: 30px;">include 目錄 9.73 MB</p>
<p style="padding-left: 30px;">lib 目錄 8 MB</p>
<p style="padding-left: 30px;">msys64 目錄 701 MB</p>
<p style="padding-left: 30px;">projects 目錄 1.03 GB</p>
<p style="padding-left: 30px;">resources 目錄 38.4 MB</p>
<p style="padding-left: 30px;">scripts 目錄 3.3 KB</p>
<p style="padding-left: 30px;">src 目錄 717 KB</p>
<p>經刪除 Webots\doc - 587 MB 以及 Webots\msys64\mingw32 - 382 MB等兩個目錄後的 webots_lite 可以從 <a href="http://a.kmol.info:88/webots_lite.7z">http://a.kmol.info:88/webots_lite.7z</a> 下載 (873 MB), 解開壓縮後約 1.77 GB, 執行 start_webots.bat 後啟動 Webots, webots_lite 所在位置不可使用中文目錄名稱.</p>
<h3>Compile Webots</h3>
<p><a href="https://github.com/cyberbotics/webots/wiki">https://github.com/cyberbotics/webots/wiki</a></p>
<p></p>
<p></p>
<h3>X3D</h3>
<p>應該可以從 <a href="https://www.cyberbotics.com/doc/guide/ure">https://www.cyberbotics.com/doc/guide/ure</a> 取出 embedded robot.</p>
<p>根據 <a href="http://mde.tw/webots_R2019a/?book=guide&amp;page=ure">http://mde.tw/webots_R2019a/?book=guide&amp;page=ure</a> 其中的 robot 從 x3d ur10 模型轉為 webgl 後透過 javascript 進行操控.</p>
<p><a href="https://github.com/mdecourse/webots_docs">https://github.com/mdecourse/webots_docs</a> 專門用於解析 <a href="https://mde.tw/webots_docs">https://mde.tw/webots_docs</a> 中與 <a href="https://github.com/showdownjs/showdown">https://github.com/showdownjs/showdown</a>, <a href="https://github.com/x3dom/x3dom">https://github.com/x3dom/x3dom</a> 與 <a href="https://developer.mozilla.org/zh-TW/docs/Web/API/WebGL_API">https://developer.mozilla.org/zh-TW/docs/Web/API/WebGL_API</a> 之間的關係.</p>
<p></p>
<h2>DH Parameters</h2>
<h4>Kuka kr16:</h4>
<p style="padding-left: 30px;"><a href="https://wiki.freecadweb.org/Robot_6-Axis">https://wiki.freecadweb.org/Robot_6-Axis</a></p>
<h4>Denavit-Hartenberg Parameters</h4>
<p><a href="/downloads/How to Find Denavit-Hartenberg Parameter Tables – Automatic Addison.pdf">How to Find Denavit-Hartenberg Parameter Tables – Automatic Addison.pdf</a> (<a href="https://automaticaddison.com/how-to-find-denavit-hartenberg-parameter-tables/">link</a>)</p>
<p><a href="/downloads/How to Find the Rotation Matrices for Robotic Arms – Automatic Addison.pdf">How to Find the Rotation Matrices for Robotic Arms – Automatic Addison.pdf</a></p>
<p><a href="/downloads/Coding Denavit-Hartenberg Tables Using Python – Automatic Addison.pdf">Coding Denavit-Hartenberg Tables Using Python – Automatic Addison.pdf</a></p>
<p><img alt="" height="600" src="/images/how-robotics-should-be-taught-large-light.jpg" width="800"/></p>
<p>Image file from <a href="https://automaticaddison.com/wp-content/uploads/2020/05/how-robotics-should-be-taught-large-light.jpg">https://automaticaddison.com/wp-content/uploads/2020/05/how-robotics-should-be-taught-large-light.jpg</a></p>
<h2>Programming</h2>
<h4>matplotlib, numpy, numpy-stl application</h4>
<h4>render stl file:</h4>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from stl import mesh
from mpl_toolkits import mplot3d
from matplotlib import pyplot

# Create a new plot
figure = pyplot.figure()
axes = mplot3d.Axes3D(figure)

# Load the STL files and add the vectors to the plot
your_mesh = mesh.Mesh.from_file('tests/stl_binary/HalfDonut.stl')
axes.add_collection3d(mplot3d.art3d.Poly3DCollection(your_mesh.vectors))

# Auto scale to the mesh size
scale = your_mesh.points.flatten(-1)
axes.auto_scale_xyz(scale, scale, scale)

# Show the plot to the screen
pyplot.show()</pre>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from stl import mesh
import math
import numpy
# pip install numpy-stl
'''
from stl import mesh
num_triangles=len(fin_list)
data = np.zeros(num_triangles, dtype=mesh.Mesh.dtype)
for i in range(num_triangles):
    #I did not know how to use numpy-arrays in this case. This was the major roadblock
    # assign vertex co-ordinates to variables to write into mesh
    data["vectors"][i] = np.array([[v1x, v1y, v1z],[v2x, v2y, v2z],[v3x, v3y, v3z]])
m=mesh.Mesh(data)
m.save('filename.stl')
'''
'''
import numpy as np
from stl import mesh

# Define the 8 vertices of the cube
vertices = np.array([\
    [-1, -1, -1],
    [+1, -1, -1],
    [+1, +1, -1],
    [-1, +1, -1],
    [-1, -1, +1],
    [+1, -1, +1],
    [+1, +1, +1],
    [-1, +1, +1]])
# Define the 12 triangles composing the cube
faces = np.array([\
    [0,3,1],
    [1,3,2],
    [0,4,7],
    [0,7,3],
    [4,5,6],
    [4,6,7],
    [5,1,2],
    [5,2,6],
    [2,3,6],
    [3,7,6],
    [0,1,5],
    [0,5,4]])

# Create the mesh
cube = mesh.Mesh(np.zeros(faces.shape[0], dtype=mesh.Mesh.dtype))
for i, f in enumerate(faces):
    for j in range(3):
        cube.vectors[i][j] = vertices[f[j],:]

# Write the mesh to file "cube.stl"
cube.save('cube.stl')

'''
'''
import numpy
from stl import mesh

# Using an existing stl file:
your_mesh = mesh.Mesh.from_file('some_file.stl')

# Or creating a new mesh (make sure not to overwrite the `mesh` import by
# naming it `mesh`):
VERTICE_COUNT = 100
data = numpy.zeros(VERTICE_COUNT, dtype=mesh.Mesh.dtype)
your_mesh = mesh.Mesh(data, remove_empty_areas=False)

# The mesh normals (calculated automatically)
your_mesh.normals
# The mesh vectors
your_mesh.v0, your_mesh.v1, your_mesh.v2
# Accessing individual points (concatenation of v0, v1 and v2 in triplets)
assert (your_mesh.points[0][0:3] == your_mesh.v0[0]).all()
assert (your_mesh.points[0][3:6] == your_mesh.v1[0]).all()
assert (your_mesh.points[0][6:9] == your_mesh.v2[0]).all()
assert (your_mesh.points[1][0:3] == your_mesh.v0[1]).all()

your_mesh.save('new_stl_file.stl')
'''

# Create 3 faces of a cube
data = numpy.zeros(6, dtype=mesh.Mesh.dtype)

# Top of the cube
data['vectors'][0] = numpy.array([[0, 1, 1],
                                  [1, 0, 1],
                                  [0, 0, 1]])
data['vectors'][1] = numpy.array([[1, 0, 1],
                                  [0, 1, 1],
                                  [1, 1, 1]])
# Front face
data['vectors'][2] = numpy.array([[1, 0, 0],
                                  [1, 0, 1],
                                  [1, 1, 0]])
data['vectors'][3] = numpy.array([[1, 1, 1],
                                  [1, 0, 1],
                                  [1, 1, 0]])
# Left face
data['vectors'][4] = numpy.array([[0, 0, 0],
                                  [1, 0, 0],
                                  [1, 0, 1]])
data['vectors'][5] = numpy.array([[0, 0, 0],
                                  [0, 0, 1],
                                  [1, 0, 1]])

# Since the cube faces are from 0 to 1 we can move it to the middle by
# substracting .5
data['vectors'] -= .5

cube_back = mesh.Mesh(data.copy())
cube_front = mesh.Mesh(data.copy())

# Rotate 90 degrees over the X axis followed by the Y axis followed by the
# X axis
cube_back.rotate([0.5, 0.0, 0.0], math.radians(90))
cube_back.rotate([0.0, 0.5, 0.0], math.radians(90))
cube_back.rotate([0.5, 0.0, 0.0], math.radians(90))

cube = mesh.Mesh(numpy.concatenate([
    cube_back.data.copy(),
    cube_front.data.copy(),
]))

# Optionally render the rotated cube faces
from matplotlib import pyplot
from mpl_toolkits import mplot3d

# Create a new plot
figure = pyplot.figure()
axes = mplot3d.Axes3D(figure)

# Render the cube
axes.add_collection3d(mplot3d.art3d.Poly3DCollection(cube.vectors))

# Auto scale to the mesh size
scale = cube_back.points.flatten()
axes.auto_scale_xyz(scale, scale, scale)

# Show the plot to the screen
pyplot.show()</pre>
<h3>Onshape</h3>
<h4>Onshape to robot:</h4>
<p><a href="/downloads/Onshape/onshape_to_robot.pdf">onshape_to_robot.pdf</a></p>
<p><a href="https://onshape-to-robot.readthedocs.io/en/latest/">https://onshape-to-robot.readthedocs.io/en/latest/</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/C8oK4uUmbRw" title="YouTube video player" width="560"></iframe></p>
<h4>Onshapepy (deprecated, replaced with <a href="https://github.com/onshape-public/onshape-clients">https://github.com/onshape-public/onshape-clients</a> ):</h4>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from onshapepy.part import Configuration
from onshapepy.core.units import u
import pytest

def test_get_part_params(cube):
    print(cube.params)
    assert cube.params['has_fillet']
    assert 100*u.mm == cube.params['L']
    assert 100*u.mm == cube.params['h']
    assert 'circular' == cube.params['fillet_type']
    assert 100*u.mm == cube.params['w']


def test_set_part_params(cube):
    altered = {'h': 200 * u.mm, 'L': 400*u.mm, 'w': 100*u.mm, 'has_fillet': False, 'fillet_type': "circular"}
    standard = {'h': 100 * u.mm, 'L': 100*u.mm, 'w': 100*u.mm, 'has_fillet': True, 'fillet_type': "circular"}
    cube.params = altered
    assert cube.params == altered
    # reset to original
    cube.params = standard
    assert cube.params == standard

def test_get_measurements(cube):
    assert cube.measurements == {'diagonal': 0.1414213562373095*u.meter, 'diagonal_3d': 0.1567516118317942*u.meter}
</pre>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/tpqhwz4zX9s" title="YouTube video player" width="560"></iframe></p>
<h4>Onshape API key:</h4>
<p><a href="https://dev-portal.onshape.com/keys">https://dev-portal.onshape.com/keys</a></p>
<p><img alt="" height="593" src="/images/onshape_api_explorer.png" width="600"/></p>
<h4>Reference:</h4>
<p style="padding-left: 30px;"><a href="https://forum.onshape.com/discussion/13683/help-getting-started-with-api">https://forum.onshape.com/discussion/13683/help-getting-started-with-api</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/onshape-public/apikey">https://github.com/onshape-public/apikey</a> </p>
<p style="padding-left: 30px;"><a href="https://onshape-public.github.io/docs/">https://onshape-public.github.io/docs/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/onshape-public/app-gltf-viewer">https://github.com/onshape-public/app-gltf-viewer</a></p>
<p></p>
<h2>Packages install</h2>
<h3>PyGObject on Windows</h3>
<p><strong>Install PyGObject with msys2</strong></p>
<p>1.Run mingw64.exe from msys2</p>
<p>2.Execute Pacman -Suy</p>
<p>3.Execute Pacman -S mingw-w64-x86_64-gtk3 mingw-w64-x86_64-python3 mingw-w64-x86_64-python3-gobject</p>
<p>4.Copy the wscite502 folder of the Y: drive and rename it to wscite502_msys2</p>
<p>5.Modify line 152-157 of python.properties file in wscite502_msys2 folder to:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">if PLAT_WIN
	python.command=Y:\msys64_20210419\mingw64\bin\pythonw
if PLAT_GTK
	python.command=python3
if PLAT_MAC
	python.command=python</pre>
<p>6.Try to execute gtk_ex1.py in SciTE</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import gi
 
gi.require_version("Gtk", "3.0")
from gi.repository import Gtk
 
win = Gtk.Window()
win.connect("destroy", Gtk.main_quit)
win.show_all()
Gtk.main()</pre>
<p><img alt="" height="480" src="/images/SciTE_1s6NIi8pmt.png" width="440"/></p>
<p>7.Finish installation</p>